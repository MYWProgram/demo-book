body {
  display: grid;
  grid-template-rows: repeat(2, minmax(100px, 400px));
  grid-template-columns: repeat(3, 1fr);
  place-items: center;
  min-height: 100vh;
}
/* * 案例一：彩虹旋转。 */
.rainbow-box {
  position: relative;
  width: 300px;
  height: 100px;
}
.rainbow-arc {
  position: absolute;
  width: 300px;
  height: 100px;
  animation: rainboxActive 3s cubic-bezier(0.58, -0.57, 0.5, 1.66) infinite;
  /* * rotate 设置元素的旋转，配合 transform-origin 修改元素旋转的原点。 */
  transform-origin: 50% 100%;
  overflow: hidden;
}
.rainbow-arc_main {
  position: absolute;
  top: 60px;
  left: 50%;
  height: 100px;
  width: 100px;
  box-sizing: border-box;
  border: 4px solid #e96d71;
  border-radius: 100%;
  transform: translateX(-50%);
}
.rainbow-arc:nth-child(2) {
  animation-delay: 100ms;
}
.rainbow-arc:nth-child(3) {
  animation-delay: 200ms;
}
.rainbow-arc:nth-child(4) {
  animation-delay: 300ms;
}
.rainbow-arc:nth-child(5) {
  animation-delay: 400ms;
}

.rainbow-arc:nth-child(2) .rainbow-arc_main {
  top: 50px;
  width: 120px;
  height: 120px;
  border-color: #ffd26f;
}
.rainbow-arc:nth-child(3) .rainbow-arc_main {
  top: 40px;
  width: 140px;
  height: 140px;
  border-color: #3677ff;
}
.rainbow-arc:nth-child(4) .rainbow-arc_main {
  top: 30px;
  width: 160px;
  height: 160px;
  border-color: #a0fe65;
}
.rainbow-arc:nth-child(5) .rainbow-arc_main {
  top: 20px;
  width: 180px;
  height: 180px;
  border-color: #fa016d;
}

@keyframes rainboxActive {
  0%,
  15% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}
/* * 案例二：动态省略号。 */
.load-indicator {
  font-size: 50px;
  color: tomato;
}
.load-indicator dot {
  display: inline-block;
  height: 1em;
  line-height: 1;
  vertical-align: -0.25em;
  overflow: hidden;
}
.load-indicator dot::after {
  display: block;
  animation: loading 2s infinite step-start both;
  white-space: pre-wrap;
  /* * 使内容换行，分别添加三种内容的点号，动画变换显示。 */
  content: '...\A..\A.\A';
}
@keyframes loading {
  0% {
    transform: translate3d(0, -3em, 0);
  }
  33% {
    transform: translate3d(0, -2em, 0);
  }
  66% {
    transform: translate3d(0, -1em, 0);
  }
}
/* * 案例三：小球聚合。 */
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.chaos-loading {
  position: relative;
  width: 100px;
  height: 100px;
  overflow: hidden;
}
.chaos-loading::after {
  display: block;
  font-size: 30px;
  font-weight: bold;
  text-align: center;
  line-height: 100px;
  color: #fff;
}
.chaos-loading li {
  position: absolute;
  top: 0;
  left: 0;
  width: 50px;
  height: 50px;
  border-radius: 100%;
  animation: move 2s linear infinite;
}
.chaos-loading li:nth-child(1) {
  background-color: #1c8ec6;
}
.chaos-loading li:nth-child(2) {
  animation-delay: -0.5s;
  background-color: #b1c67a;
}
.chaos-loading li:nth-child(3) {
  animation-delay: -1s;
  background-color: #c3004c;
}
.chaos-loading li:nth-child(4) {
  animation-delay: -1.5s;
  background-color: #4205a4;
}
@keyframes move {
  0%,
  100% {
    /* * translate3d(tx, ty, tz) 描述元素在 3d 空间内移动；配合动画给每个 li 元素添加延时执行。 */
    transform: translate3d(0, 0, 0);
  }
  25% {
    transform: translate3d(100%, 0, 0);
  }
  50% {
    transform: translate3d(100%, 100%, 0);
  }
  75% {
    transform: translate3d(0, 100%, 0);
  }
}
/* * 案例四：转动边框。 */
.snakelike-border {
  position: relative;
  width: 100px;
  height: 100px;
  background-color: #ffffff;
}
.snakelike-border::before,
.snakelike-border::after {
  position: absolute;
  left: -5px;
  right: -5px;
  top: -5px;
  bottom: -5px;
  border: 5px solid;
  content: '';
  animation: snakeMove 5s linear infinite;
}
.snakelike-border::before {
  border-color: tomato;
}
.snakelike-border::after {
  border-color: yellowgreen;
  animation-delay: -2.5s;
}
@keyframes snakeMove {
  0%,
  100% {
    /* * 使用 clip-path 配合动画，裁剪显示伪类添加的边框。 */
    /* * clip-path: inset(top, right, bottom, left); 上、右、下、左定义矩形各方向向内裁剪的距离。 */
    clip-path: inset(0 100px 0 0);
  }
  25% {
    clip-path: inset(100px 0 0 0);
  }
  50% {
    clip-path: inset(0 0 0 100px);
  }
  75% {
    clip-path: inset(0 0 100px 0);
  }
}
/* * 案例五：转动线圈。 */
/* * 将画布定义成 180 * 180。 */
.spinner {
  margin: 10px;
  width: 180px;
  height: 180px;
  /* * 定义线圈动画的各种属性。 */
  animation: rotate 2s linear infinite;
}
/* * 线圈 360 度旋转。 */
@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
/* * 线圈以及实心小圆的部分。 */
.spinner-dot {
  stroke: tomato;
  stroke-width: 1;
  fill: tomato;
  /* * 小球动画的各种属性。 */
  animation: skew 2s linear infinite alternate;
}
/* * 小球旋转倾斜，动画更加生动。 */
@keyframes skew {
  from {
    transform: skewX(10deg);
  }
  to {
    transform: skewX(40deg);
  }
}
.spinner-border {
  fill: transparent;
  stroke-width: 2;
  width: 100%;
  height: 100%;
}
.path {
  stroke-dasharray: 170;
  stroke-dashoffset: 20;
}
